{"version":3,"sources":["./src/app/categorias/categorias.component.ts","./src/app/categorias/categorias.component.html","./src/environments/environment.ts","./src/app/empresas/empresas.component.html","./src/app/empresas/empresas.component.ts","./src/app/productos/productos.component.html","./src/app/productos/productos.component.ts","./src/app/services/motoristas.service.ts","./src/app/services/productos.service.ts","./src/app/ordenes/ordenes.component.html","./src/app/ordenes/ordenes.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/motoristas/motoristas.component.ts","./src/app/motoristas/motoristas.component.html","./src/app/app.module.ts","./src/app/app.config.ts","./src/app/services/upload.service.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/services/ordenes.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/empresas.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-categorias',\r\n  templateUrl: './categorias.component.html'\r\n})\r\nexport class CategoriasComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    document.getElementById('body').style.backgroundColor = '#FFF';\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <img class=\"img-login\" src=\"../../../assets/img/Logo-Nany-trans-1.png\" alt=\"Nany\" routerLink=\"/\">\r\n    <div class=\"content-login\" style=\"background-color: #FFE9C7\">\r\n        <h4 class=\"mt-0 mb-5\">¿Qué deseas administrar hoy?</h4>\r\n        <div class=\"col-6 d-inline-block\">\r\n          <button class=\"btn-opt-login\" routerLink=\"/Empresas\">\r\n            <img src=\"../../../assets/iconos/empresa-blanco.png\">\r\n            Empresas</button>\r\n        </div>\r\n        <div class=\"col-6 d-inline-block\">\r\n          <button class=\"btn-opt-login\" routerLink=\"/Productos\">\r\n            <img src=\"../../../assets/iconos/caja-blanco.png\">\r\n            Productos</button>\r\n        </div>\r\n        <div class=\"col-6 d-inline-block mt-4\">\r\n          <button class=\"btn-opt-login\" routerLink=\"/Motoristas\">\r\n            <img src=\"../../../assets/iconos/moto-blanco.png\">\r\n            Motoristas</button>\r\n        </div>\r\n        <div class=\"col-6 d-inline-block mt-4\">\r\n          <button class=\"btn-opt-login\" routerLink=\"/Ordenes\">\r\n            <img src=\"../../../assets/iconos/nota-blanco.png\">\r\n            Ordenes</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<app-navbar [item]='option'></app-navbar>\r\n<div id=\"ad-title\">\r\n    <h2>Gestión de empresas</h2>\r\n</div>\r\n<div class=\"container-fluid\">\r\n    <p-toast></p-toast>\r\n\r\n    <div class=\"card\">\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n                <button pButton pRipple label=\"Nuevo\" icon=\"pi pi-plus\" class=\"btn-new\" (click)=\"openNew()\"></button>\r\n                <button pButton pRipple [label]=\"Delete\" icon=\"pi pi-trash\" class=\"btn-delete\"\r\n                    (click)=\"deleteSelectedCompanies()\"\r\n                    [disabled]=\"!empresaSeleccionada || !empresaSeleccionada.length\"></button>\r\n            </ng-template>\r\n            <span class=\"p-input-icon-left\" id=\"buscar\">\r\n                <i class=\"pi pi-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    placeholder=\"Buscar\" />\r\n            </span>\r\n        </p-toolbar>\r\n\r\n        <p-table #dt [value]=\"empresas\" [rows]=\"10\" [paginator]=\"true\"\r\n            [globalFilterFields]=\"['name','country.name','representative.name','status']\"\r\n            [(selection)]=\"empresaSeleccionada\" [rowHover]=\"true\" dataKey=\"_id\"\r\n            currentPageReportTemplate=\"Mostrar de {first} a {last} de {totalRecords} empresas\"\r\n            [showCurrentPageReport]=\"true\">\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th style=\"width: 3rem\">\r\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th pSortableColumn=\"idCategoria\">Categoria</th>\r\n                    <th pSortableColumn=\"name\">Nombre</th>\r\n                    <th pSortableColumn=\"description\">Descripción</th>\r\n                    <th pSortableColumn=\"resume\">Resumen</th>\r\n                    <th pSortableColumn=\"logo\">Logo</th>\r\n                    <th pSortableColumn=\"schedule\">Horario</th>\r\n                    <th pSortableColumn=\"ubication\">Ubicación</th>\r\n                    <th pSortableColumn=\"qualification\">Calificación</th>\r\n                    <th pSortableColumn=\"banner\">Banner</th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-empresa>\r\n                <tr>\r\n                    <td>\r\n                        <p-tableCheckbox [value]=\"empresa\"></p-tableCheckbox>\r\n                    </td>\r\n                    <td>{{empresa.nombreCategoria}}</td>\r\n                    <td>{{empresa.nombre}}</td>\r\n                    <td>{{empresa.descripcion}}</td>\r\n                    <td>{{empresa.resumen}}</td>\r\n                    <td><img [src]=\"empresa.logo\" [alt]=\"empresa.nombre\" width=\"90\"\r\n                            class=\"p-shadow-4\" />\r\n                    </td>\r\n                    <td>{{empresa.horario}}</td>\r\n                    <td>{{empresa.ubicacion}}</td>\r\n                    <td>{{empresa.calificacion}}</td>\r\n                    <td><img [src]=\"empresa.banner\" [alt]=\"empresa.nombre\" width=\"100\"\r\n                            class=\"p-shadow-4\" />\r\n                    </td>\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\"\r\n                            (click)=\"editCompany(empresa)\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\"\r\n                            (click)=\"deleteCompany(empresa)\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    En total hay {{empresas ? empresas.length : 0 }} empresas.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n\r\n    <!--Modal Crear Empresa-->\r\n\r\n    <p-dialog [(visible)]=\"empresaDialog\" [style]=\"{width: '450px'}\" header=\"Detalle de Empresa\" [modal]=\"true\"\r\n        styleClass=\"p-fluid\" id=\"admim-modal\">\r\n        <ng-template pTemplate=\"content\">\r\n            <img [src]=\"empresa.banner\" [alt]=\"empresa.banner\" class=\"company-banner\"\r\n                *ngIf=\"empresa.banner\" width=\"100%\">\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Categoria</label>\r\n                <p-dropdown [options]=\"categorias\"  name=\"categoriaSeleccionada\" [(ngModel)]=\"categoriaSeleccionada\" placeholder=\"Seleccione una Empresa\" optionLabel=\"nombre\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"name\">Nombre</label>\r\n                <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"empresa.nombre\" required autofocus />\r\n                <small class=\"p-error\" *ngIf=\"submitted && !empresa.nombre\">Name is required.</small>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Descripción</label>\r\n                <textarea id=\"description\" pInputTextarea [(ngModel)]=\"empresa.descripcion\" required rows=\"3\"\r\n                    cols=\"20\"></textarea>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"resume\">Resumen</label>\r\n                <textarea id=\"resume\" pInputTextarea [(ngModel)]=\"empresa.resumen\" required rows=\"2\"\r\n                    cols=\"10\"></textarea>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Logo</label>\r\n                <p-fileUpload  customUpload=\"true\" (uploadHandler)=\"onUpload($event,'logo')\"\r\n                accept=\"image/*\" maxFileSize=\"10000000\">\r\n                    <ng-template pTemplate=\"content\">\r\n                        \r\n                    </ng-template>\r\n                </p-fileUpload>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"schedule\">Horario</label>\r\n                <input type=\"text\" pInputText id=\"schedule\" [(ngModel)]=\"empresa.horario\" required autofocus />\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"ubication\">Ubicación</label>\r\n                <input type=\"text\" pInputText id=\"ubication\" [(ngModel)]=\"empresa.ubicacion\" required autofocus />\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Calificación</label>\r\n                <p-inputNumber id=\"qualification\" [(ngModel)]=\"empresa.calificacion\"\r\n                    placeholder=\"Ingrese un numero del 1 al 5\"></p-inputNumber>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Banner</label>\r\n                <p-fileUpload  customUpload=\"true\" (uploadHandler)=\"onUpload($event,'banner')\"\r\n                accept=\"image/*\" maxFileSize=\"10000000\">\r\n                    <ng-template pTemplate=\"content\">\r\n                        \r\n                    </ng-template>\r\n                </p-fileUpload>\r\n            </div>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-text\" id=\"btn-mmodal1\"\r\n                (click)=\"hideDialog()\"></button>\r\n            <button pButton pRipple label=\"Guardar\" icon=\"pi pi-check\" class=\"p-button-text\" id=\"btn-mmodal2\"\r\n                (click)=\"saveCompany()\"></button>\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Empresa } from '../models/empresa';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { EmpresasService } from '../services/empresas.service';\r\nimport { UploadService } from '../services/upload.service';\r\n\r\n@Component({\r\n  selector: 'app-empresas',\r\n  templateUrl: './empresas.component.html',\r\n  styles: [\r\n    `\r\n      :host ::ng-deep .p-dialog .company-image {\r\n        width: 150px;\r\n        margin: 0 auto 2rem auto;\r\n        display: block;\r\n      }\r\n    `,\r\n  ],\r\n  styleUrls: ['./empresas.component.sass'],\r\n})\r\nexport class EmpresasComponent {\r\n  categorias: any = [];\r\n  categoriaSeleccionada: any;\r\n  empresas: Empresa[] = [];\r\n  empresaSeleccionada: Empresa[] = [];\r\n  empresa!: Empresa;\r\n  empresaDialog: boolean = false;\r\n  submitted: boolean = false;\r\n  option: number = 0;\r\n  uploadedFiles: any[] = [];\r\n  formData = new FormData();\r\n\r\n  constructor(\r\n    private empresasService: EmpresasService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private uploadService: UploadService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.empresasService.obtenerCategorias().subscribe(\r\n      (result) => {\r\n        this.categorias = result;\r\n        this.categorias.forEach(categoria => {\r\n          categoria.empresas.forEach(empresa => {\r\n            empresa.idCategoria = categoria._id;\r\n            empresa.nombreCategoria = categoria.nombre;\r\n            this.empresas.push(empresa);\r\n          });\r\n        });\r\n        console.log(result);\r\n        console.log(this.empresas);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    document.getElementById('body').style.backgroundColor = '#FFE9C7';\r\n  }\r\n\r\n  openNew() {\r\n    this.empresa = {};\r\n    this.submitted = false;\r\n    this.empresaDialog = true;\r\n  }\r\n\r\n   deleteSelectedCompanies() {\r\n     this.confirmationService.confirm({\r\n       message: '¿Estas seguro que quieres eliminar estas empresa?',\r\n       header: 'Confirmar',\r\n       icon: 'pi pi-exclamation-triangle',\r\n       accept: () => {\r\n         this.empresas = this.empresas.filter(\r\n           (val) => !this.empresaSeleccionada.includes(val)\r\n         );\r\n         \r\n         for (let i = 0; i < this.empresaSeleccionada.length; i++) {\r\n          this.empresasService.borrarEmpresa(this.empresaSeleccionada[i].idCategoria, this.empresaSeleccionada[i]._id).subscribe(\r\n            result => {\r\n              this.messageService.add({\r\n                severity: 'success',\r\n                summary: 'Exitoso',\r\n                detail: 'Empresa Eliminada',\r\n                life: 3000,\r\n              });\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            }\r\n          );\r\n         }\r\n       },\r\n     });\r\n   }\r\n\r\n  editCompany(empresa: Empresa) {\r\n    this.empresa = { ...empresa };\r\n    this.empresaDialog = true;\r\n  }\r\n\r\n  deleteCompany(empresa: Empresa) {\r\n    this.confirmationService.confirm({\r\n      message: '¿Estas seguro que quieres eliminar esta empresa ' + empresa.nombre + '?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.empresasService.borrarEmpresa(empresa.idCategoria, empresa._id).subscribe(\r\n          result => {\r\n            this.empresas = this.empresas.filter((val) => val._id !== empresa._id);\r\n            this.empresa = {};\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Exitoso',\r\n              detail: 'Empresa eliminada',\r\n              life: 3000,\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  hideDialog() {\r\n    this.empresaDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\nsaveCompany() {\r\n  this.submitted = true;\r\n\r\n  if (this.empresa.nombre?.trim()) {\r\n    if (this.empresa._id) {\r\n      this.empresas[this.findIndexById(this.empresa._id)] = this.empresa;\r\n      this.empresasService.actualizarEmpresa(this.empresa.idCategoria, this.empresa._id, this.empresa).subscribe(\r\n        result => {\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Exitoso',\r\n            detail: 'Empresa Modificada',\r\n            life: 3000,\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      );\r\n     \r\n    } else {\r\n      let empresaAgregar = this.empresa;\r\n      this.empresasService.crearEmpresa(this.categoriaSeleccionada._id, this.empresa).subscribe(\r\n        result => {\r\n          console.log(result);\r\n          this.empresas.push(empresaAgregar);\r\n          this.messageService.add({\r\n            severity: 'success',\r\n            summary: 'Exitoso',\r\n            detail: 'Empresa creada',\r\n            life: 3000,\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n        }\r\n      )\r\n    }\r\n\r\n    this.empresas = [...this.empresas];\r\n    this.empresaDialog = false;\r\n    this.empresa = {};\r\n  }\r\n}\r\n\r\n  findIndexById(id: string): number {\r\n    let index = -1;\r\n    for (let i = 0; i < this.empresas.length; i++) {\r\n      if (this.empresas[i]._id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n\r\n  onUpload(event,tipo) {\r\n    for(let file of event.files) {\r\n      console.log(this.uploadedFiles);\r\n      this.uploadedFiles.push(file);\r\n      this.formData.append(\"imagen\", file);\r\n      this.formData.append(\"folder\", 'empresas')\r\n      this.uploadService.subirImagen(this.formData).subscribe(\r\n        result => {\r\n          if (tipo == 'banner') {\r\n            this.empresa.banner = result.url;\r\n            this.messageService.add({severity: 'info', summary: 'Banner Subido'});\r\n          } else {\r\n            this.empresa.logo = result.url;\r\n            this.messageService.add({severity: 'info', summary: 'Logo Subido'});\r\n          }\r\n          console.log(result)\r\n          this.uploadedFiles = [];\r\n          this.formData.delete(\"imagen\");\r\n          this.formData.delete(\"folder\"); \r\n        },\r\n        error => {\r\n         console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n","<app-navbar [item]='option'></app-navbar>\r\n<div id=\"ad-title\">\r\n    <h2>Gestión de productos</h2>\r\n</div>\r\n<div class=\"container-fluid\">\r\n    <p-toast></p-toast>\r\n\r\n    <div class=\"card\">\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n                <button pButton pRipple label=\"Nuevo\" icon=\"pi pi-plus\" class=\"btn-new\" (click)=\"openNew()\"></button>\r\n                <button pButton pRipple [label]=\"Delete\" icon=\"pi pi-trash\" class=\"btn-delete\"\r\n                    (click)=\"deleteSelectedProducts()\"\r\n                    [disabled]=\"!productoSeleccionado || !productoSeleccionado.length\"></button>\r\n            </ng-template>\r\n            <span class=\"p-input-icon-left\" id=\"buscar\">\r\n                <i class=\"pi pi-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    placeholder=\"Buscar\" />\r\n            </span>\r\n        </p-toolbar>\r\n\r\n        <p-table #dt [value]=\"productos\" [rows]=\"10\" [paginator]=\"true\"\r\n            [globalFilterFields]=\"['name','country.name','representative.name','status']\"\r\n            [(selection)]=\"productoSeleccionado\" [rowHover]=\"true\" dataKey=\"_id\"\r\n            currentPageReportTemplate=\"Mostrar de {first} a {last} de {totalRecords} productos\"\r\n            [showCurrentPageReport]=\"true\">\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th style=\"width: 3rem\">\r\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th pSortableColumn=\"name\">Nombre</th>\r\n                    <th pSortableColumn=\"description\">Descripción</th>\r\n                    <th pSortableColumn=\"price\">Precio</th>\r\n                    <th pSortableColumn=\"isv\">ISV</th>\r\n                    <th pSortableColumn=\"quantity\">Existencia</th>\r\n                    <th pSortableColumn=\"image\">Imagen</th>\r\n                    <th pSortableColumn=\"company\">Empresa</th>\r\n                    <th pSortableColumn=\"category\">Categoria</th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-producto>\r\n                <tr>\r\n                    <td>\r\n                        <p-tableCheckbox [value]=\"producto\"></p-tableCheckbox>\r\n                    </td>\r\n                    <td>{{producto.nombre}}</td>\r\n                    <td>{{producto.descripcion}}</td>\r\n                    <td>{{producto.precio | currency:'Lps. '}}</td>\r\n                    <td>{{producto.isv | currency:'Lps. '}}</td>\r\n                    <td>{{producto.existencia}}</td>\r\n                    <td><img [src]=\"producto.imagen\" [alt]=\"producto.nombre\" width=\"100\"\r\n                            class=\"p-shadow-4\" />\r\n                    </td>\r\n                    <td>{{producto.nombreEmpresa}}</td>\r\n                    <td>{{producto.nombreCategoria}}</td>\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\"\r\n                            (click)=\"editProduct(producto)\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\"\r\n                            (click)=\"deleteProduct(producto)\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    En total hay {{productos ? productos.length : 0 }} productos.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n\r\n    <!--Modal Create Product-->\r\n\r\n    <p-dialog [(visible)]=\"productosDialog\" [style]=\"{width: '450px'}\" header=\"Detalle de Producto\" [modal]=\"true\"\r\n        styleClass=\"p-fluid\" id=\"admim-modal\">\r\n        <ng-template pTemplate=\"content\">\r\n            <img [src]=\"producto.imagen\" [alt]=\"producto.imagen\"\r\n                class=\"product-image\" *ngIf=\"producto.imagen\">\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Categoria</label>\r\n                <p-dropdown [options]=\"categorias\"  name=\"categoriaSeleccionada\" [(ngModel)]=\"categoriaSeleccionada\" placeholder=\"Seleccione una Categoria\" optionLabel=\"nombre\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Empresa</label>\r\n                <p-dropdown [options]=\"empresas\"  name=\"empresaSeleccionada\" [(ngModel)]=\"empresaSeleccionada\" placeholder=\"Seleccione una Empresa\" optionLabel=\"nombre\">\r\n                </p-dropdown>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"name\">Nombre</label>\r\n                <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"producto.nombre\" required autofocus />\r\n                <small class=\"p-error\" *ngIf=\"submitted && !producto.nombre\">Name is required.</small>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"description\">Descripción</label>\r\n                <textarea id=\"description\" pInputTextarea [(ngModel)]=\"producto.descripcion\" required rows=\"3\"\r\n                    cols=\"20\"></textarea>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"inventoryStatus\">Precio</label>\r\n                <p-inputNumber id=\"price\" [(ngModel)]=\"producto.precio\">\r\n                </p-inputNumber>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"inventoryStatus\">ISV</label>\r\n                <p-inputNumber id=\"isv\" [(ngModel)]=\"producto.isv\">\r\n                </p-inputNumber>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Existencia</label>\r\n                <p-inputNumber id=\"quantity\" [(ngModel)]=\"producto.existencia\"></p-inputNumber>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Imagen</label>\r\n                <p-fileUpload  customUpload=\"true\" (uploadHandler)=\"onUpload($event)\"\r\n                accept=\"image/*\" maxFileSize=\"10000000\">\r\n                    <ng-template pTemplate=\"content\">\r\n                        \r\n                    </ng-template>\r\n                </p-fileUpload>\r\n            </div>\r\n              <!--<p-dropdown [(ngModel)]=\"product.comapny\" inputId=\"company\" [options]=\"statuses\"\r\n                    placeholder=\"Select\">\r\n                    <ng-template let-option pTemplate=\"item\">\r\n                        <span [class]=\"'product-badge status-' + option.value\">{{option.label}}</span>\r\n                    </ng-template>\r\n                </p-dropdown> *Este sera para las empresas -->\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-text\" id=\"btn-mmodal1\"\r\n                (click)=\"hideDialog()\"></button>\r\n            <button pButton pRipple label=\"Guardar\" icon=\"pi pi-check\" class=\"p-button-text\" id=\"btn-mmodal2\"\r\n                (click)=\"saveProduct()\"></button>\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Producto } from '../models/producto';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ProductosService } from '../services/productos.service';\r\nimport { EmpresasService } from '../services/empresas.service';\r\nimport { UploadService } from '../services/upload.service';\r\n\r\n@Component({\r\n  selector: 'app-productos',\r\n  templateUrl: './productos.component.html',\r\n  styles: [\r\n    `\r\n      :host ::ng-deep .p-dialog .product-image {\r\n        width: 150px;\r\n        margin: 0 auto 2rem auto;\r\n        display: block;\r\n      }\r\n    `,\r\n  ],\r\n  styleUrls: ['./productos.component.sass'],\r\n})\r\nexport class ProductosComponent {\r\n  categorias: any = [];\r\n  categoriaSeleccionada: any;\r\n  empresas: any = [];\r\n  empresaSeleccionada: any;\r\n  productosDialog: boolean = false;\r\n  productos: Producto[] = [];\r\n  producto!: Producto;\r\n  productoSeleccionado: Producto[] = [];\r\n  submitted: boolean = false;\r\n  option: number = 1;\r\n  uploadedFiles: any[] = [];\r\n  formData = new FormData();\r\n\r\n  constructor(\r\n    private productosService: ProductosService,\r\n    private empresasService: EmpresasService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService,\r\n    private uploadService: UploadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.empresasService.obtenerCategorias().subscribe(\r\n      (result) => {\r\n        this.categorias = result;\r\n        this.categorias.forEach(categoria => {\r\n          categoria.empresas.forEach(empresa => {\r\n            empresa.idCategoria = categoria._id;\r\n            empresa.nombreCategoria = categoria.nombre;\r\n            this.empresas.push(empresa);\r\n            empresa.productos.forEach(producto => {\r\n              producto.idCategoria = categoria._id;\r\n              producto.nombreCategoria = categoria.nombre;\r\n              producto.idEmpresa = empresa._id;\r\n              producto.nombreEmpresa = empresa.nombre; \r\n              this.productos.push(producto);\r\n            });\r\n          });\r\n        });\r\n        console.log(\"Categorias\", this.categorias);\r\n        console.log(\"Empresas\", this.empresas);\r\n        console.log(\"Productos\", this.productos);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    document.getElementById('body').style.backgroundColor = '#FFE9C7';\r\n  }\r\n\r\n  openNew() {\r\n    this.producto = {};\r\n    this.submitted = false;\r\n    this.productosDialog = true;\r\n  }\r\n\r\n  deleteSelectedProducts() {\r\n    this.confirmationService.confirm({\r\n      message: '¿Estas seguro que quieres eliminar estos productos?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.productos = this.productos.filter(\r\n          (val) => !this.productoSeleccionado.includes(val)\r\n        );\r\n        for (let i = 0; i < this.productoSeleccionado.length; i++) {\r\n          this.productosService.borrarProducto(\r\n            this.productoSeleccionado[i].idCategoria,\r\n            this.productoSeleccionado[i].idEmpresa,\r\n            this.productoSeleccionado[i]._id\r\n          )\r\n          .subscribe(\r\n            result => {\r\n              this.messageService.add({\r\n                severity: 'success',\r\n                summary: 'Exitoso',\r\n                detail: 'Producto eliminado',\r\n                life: 3000,\r\n              });\r\n            },\r\n            error => {\r\n              console.log(error);\r\n            }\r\n          );\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  editProduct(producto: Producto) {\r\n    this.producto = { ...producto };\r\n    this.productosDialog = true;\r\n  }\r\n\r\n  deleteProduct(producto: Producto) {\r\n    this.confirmationService.confirm({\r\n      message: '¿Estas seguro que quieres eliminar este producto ' + producto.nombre + '?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.productosService.borrarProducto(producto.idCategoria, producto.idEmpresa, producto._id).subscribe(\r\n          result => {\r\n            this.productos = this.productos.filter((val) => val._id !== producto._id);\r\n            this.producto = {};\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Exitoso',\r\n              detail: 'Producto eliminado',\r\n              life: 3000,\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  hideDialog() {\r\n    this.productosDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\n  saveProduct() {\r\n    this.submitted = true;\r\n\r\n    if (this.producto.nombre?.trim()) {\r\n      if (this.producto._id) {\r\n        this.productos[this.findIndexById(this.producto._id)] = this.producto;\r\n        this.productosService.actualizarProducto(this.producto.idCategoria, this.producto.idEmpresa, this.producto._id, this.producto).subscribe(\r\n          result => {\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Exitoso',\r\n              detail: 'Producto modificado',\r\n              life: 3000,\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      } else {\r\n        let producto = this.producto;\r\n        producto.nombreCategoria = this.categoriaSeleccionada.nombre;\r\n        producto.nombreEmpresa = this.empresaSeleccionada.nombre;\r\n        this.productosService.crearProducto(this.categoriaSeleccionada._id, this.empresaSeleccionada._id, this.producto).subscribe(\r\n          result => {\r\n            console.log(result);\r\n            this.productos.push(producto);\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Exito',\r\n              detail: 'Producto creado',\r\n              life: 3000,\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n        console.log(\"Producto\", this.producto);\r\n      }\r\n\r\n      this.productos = [...this.productos];\r\n      this.productosDialog = false;\r\n      this.producto = {};\r\n    }\r\n  }\r\n\r\n  findIndexById(id: string): number {\r\n    let index = -1;\r\n    for (let i = 0; i < this.productos.length; i++) {\r\n      if (this.productos[i]._id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n\r\n  onUpload(event) {\r\n    let file: File = event.files[0];\r\n    console.log(file);\r\n    this.uploadedFiles.push(file);\r\n    this.formData.append(\"imagen\", file);\r\n    this.formData.append(\"folder\", 'usuarios');\r\n\r\n    this.uploadService.subirImagen(this.formData).subscribe(\r\n      result => {\r\n        console.log(result);\r\n        this.producto.imagen = result.url;\r\n        this.messageService.add({severity: 'info', summary: 'Imagen Subida'});\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );}\r\n}\r\n","import { API_BASE_URL } from '../app.config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MotoristasService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  obtenerMotoristas():Observable<any>{\r\n    return this.httpClient.get(`${API_BASE_URL}/usuarios/motoristas`);\r\n  }\r\n\r\n  //Actualizar el estado de un motorista\r\n  actualizarMotorista(idMotorista: String, estado: any):Observable<any>{\r\n    return this.httpClient.put(`${API_BASE_URL}/usuarios/motoristas/${idMotorista}`, estado);\r\n  }\r\n\r\n  eliminarMotorista(idMotorista: String):Observable<any>{\r\n    return this.httpClient.delete(`${API_BASE_URL}/usuarios/motoristas/${idMotorista}`);\r\n  }\r\n\r\n}\r\n","import { API_BASE_URL } from '../app.config';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductosService {\n  constructor(private httpClient: HttpClient) {}\n\n  crearProducto(\n    idCategoria: String,\n    idEmpresa: String,\n    producto: any\n  ): Observable<any> {\n    return this.httpClient.post(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas/${idEmpresa}/productos`,\n      producto\n    );\n  }\n\n  obtenerProductos(idCategoria: String, idEmpresa: String): Observable<any> {\n    return this.httpClient.get(\n      `${API_BASE_URL}//categorias/${idCategoria}/empresas/${idEmpresa}/productos`\n    );\n  }\n\n  obtenerProducto(\n    idCategoria: String,\n    idEmpresa: String,\n    idProducto: String\n  ): Observable<any> {\n    return this.httpClient.get(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas/${idEmpresa}/productos/${idProducto}`\n    );\n  }\n\n  actualizarProducto(\n    idCategoria: String,\n    idEmpresa: String,\n    idProducto: String,\n    producto: any\n  ): Observable<any> {\n    return this.httpClient.put(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas/${idEmpresa}/productos/${idProducto}`,\n      producto\n    );\n  }\n\n  borrarProducto(\n    idCategoria: String,\n    idEmpresa: String,\n    idProducto: String\n  ): Observable<any> {\n    return this.httpClient.delete(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas/${idEmpresa}/productos/${idProducto}`\n    );\n  }\n}\n","<app-navbar [item]='option'></app-navbar>\r\n<div id=\"ad-title\">\r\n    <h2>Gestión de órdenes</h2>\r\n</div>\r\n<div class=\"container-fluid\">\r\n    <p-toast></p-toast>\r\n\r\n    <div class=\"card\">\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n                <button pButton pRipple [label]=\"Delete\" icon=\"pi pi-trash\" class=\"btn-delete\"\r\n                    (click)=\"deleteSelectedOrdenes()\"\r\n                    [disabled]=\"!ordenSeleccionada || !ordenSeleccionada.length\"></button>\r\n            </ng-template>\r\n            <span class=\"p-input-icon-left\" id=\"buscar\">\r\n                <i class=\"pi pi-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    placeholder=\"Buscar\" />\r\n            </span>\r\n        </p-toolbar>\r\n\r\n        <p-table #dt [value]=\"ordenes\" [rows]=\"10\" [paginator]=\"true\"\r\n            [globalFilterFields]=\"['name','country.name','representative.name','status']\"\r\n            [(selection)]=\"ordenSeleccionada\" [rowHover]=\"true\" dataKey=\"_id\"\r\n            currentPageReportTemplate=\"Mostrar de {first} a {last} de {totalRecords} órdenes\"\r\n            [showCurrentPageReport]=\"true\">\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th style=\"width: 3rem\">\r\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th pSortableColumn=\"numeroOrder\">No. Orden</th>\r\n                    <th pSortableColumn=\"nombreCliente\">Cliente</th>\r\n                    <th pSortableColumn=\"ubicacionOrden\">Ubicación</th>\r\n                    <th pSortableColumn=\"factura\">Total factura</th>\r\n                    <th pSortableColumn=\"fecha\">Fecha</th>\r\n                    <th pSortableColumn=\"nombreMotorista\">Motorista</th>\r\n                    <th pSortableColumn=\"tipoEstado\">Estado</th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-orden>\r\n                <tr>\r\n                    <td>\r\n                        <p-tableCheckbox [value]=\"orden\"></p-tableCheckbox>\r\n                    </td>\r\n                    <td>{{orden.numOrden}}</td>\r\n                    <td>{{orden.cliente.nombre}} {{orden.cliente.apellido}}</td>\r\n                    <td>{{orden.ubicacionOrden.direccion}} Latitud: {{orden.ubicacionOrden.latitud}} Longitud: {{orden.ubicacionOrden.longitud}}</td>\r\n                    <td>{{orden.factura.total | currency:'Lps. '}}</td>\r\n                    <td>{{orden.fecha | date:'dd-MM-yyyy'}}</td>\r\n                    <td>{{orden.motorista.nombre}} {{orden.motorista.apellido}}</td>\r\n                    <td>{{orden.tipoEstado.nombreEstado}}</td>\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\"\r\n                            (click)=\"editOrden(orden)\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\"\r\n                            (click)=\"deleteOrden(orden)\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    En total hay {{ordenes ? ordenes.length : 0 }} órdenes.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n\r\n    <!--Modal Create Company-->\r\n\r\n    <p-dialog [(visible)]=\"ordenDialog\" [style]=\"{width: '450px'}\" header=\"Detalle de Orden\" [modal]=\"true\"\r\n        styleClass=\"p-fluid\" id=\"admim-modal\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div class=\"p-field\">\r\n                <label for=\"numberOrder\">No. Orden</label>\r\n                <input type=\"text\" pInputText id=\"numOrden\" [(ngModel)]=\"orden.numOrden\" required disabled/>\r\n                <small class=\"p-error\" *ngIf=\"submitted && !order.numOrder\">Required.</small>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"nameClient\">Cliente</label>\r\n                <input type=\"text\" pInputText id=\"cliente\" [(ngModel)]=\"orden.cliente.nombre\" required disabled />\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"ubication\">Ubicación</label>\r\n                <input type=\"text\" pInputText id=\"ubicacion\" [(ngModel)]=\"orden.ubicacionOrden.direccion\" required disabled/>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"totalOrder\">Total factura</label>\r\n                <input type=\"text\" pInputText id=\"totalFactura\" [(ngModel)]=\"orden.factura.total\" required disabled/>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"date\">Fecha</label>\r\n                <input type=\"text\" pInputText id=\"fecha\" [(ngModel)]=\"orden.fecha\" required disabled/>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Motorista</label>\r\n                <p-dropdown [options]=\"listaMotoristas\"  name=\"motorista\" [(ngModel)]=\"orden.motorista\" placeholder=\"Seleccione un motorista\" \r\n                optionLabel=\"nombre\"></p-dropdown>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Estado de orden</label>\r\n                <input type=\"text\" pInputText id=\"estado\" [(ngModel)]=\"orden.tipoEstado.nombreEstado\" required disabled/>\r\n            </div>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-text\" id=\"btn-mmodal1\"\r\n                (click)=\"hideDialog()\"></button>\r\n            <button pButton pRipple label=\"Guardar\" icon=\"pi pi-check\" class=\"p-button-text\" id=\"btn-mmodal2\"\r\n                (click)=\"saveOrden()\"></button>\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Orden } from '../models/orden';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { OrdenesService } from '../services/ordenes.service';\r\nimport { MessageService } from 'primeng/api';\r\nimport { MotoristasService } from '../services/motoristas.service';\r\n\r\n@Component({\r\n  selector: 'app-ordenes',\r\n  templateUrl: './ordenes.component.html',\r\n  styles: [\r\n    `\r\n      :host ::ng-deep .p-dialog .order-image {\r\n        width: 150px;\r\n        margin: 0 auto 2rem auto;\r\n        display: block;\r\n      }\r\n    `,\r\n  ],\r\n  styleUrls: ['./ordenes.component.sass']\r\n})\r\nexport class OrdenesComponent {\r\n  ordenDialog: boolean = false;\r\n  ordenes: Orden[] = [];\r\n  orden!: Orden;\r\n  ordenSeleccionada: Orden[] = [];\r\n  listaMotoristas: [];\r\n  submitted: boolean = false;\r\n  option: number=3;\r\n\r\n  constructor(\r\n    private ordenesService: OrdenesService,\r\n    private motoristasService: MotoristasService, \r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ordenesService.obtenerOrdenes().subscribe(\r\n      (result)=>{\r\n        this.ordenes = result;\r\n        console.log(result);\r\n      },\r\n      (error)=>{\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    this.motoristasService.obtenerMotoristas().subscribe(\r\n      result=>{\r\n        this.listaMotoristas = result;\r\n        console.log(result);\r\n      },\r\n      error=> console.log(error)\r\n    )\r\n    document.getElementById('body').style.backgroundColor = '#FFE9C7';\r\n  }\r\n\r\n  deleteSelectedOrdenes() {\r\n    this.confirmationService.confirm({\r\n      message: '¿Estas seguro que quieres eliminar estas ordenes?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordenes = this.ordenes.filter(\r\n          (val) => !this.ordenSeleccionada.includes(val)\r\n        );\r\n        for (let i = 0; i < this.ordenSeleccionada.length; i++) {\r\n          this.ordenesService.eliminarOrden(this.ordenSeleccionada[i]._id).subscribe(\r\n            result=>{\r\n              this.ordenSeleccionada = [];\r\n              this.messageService.add({\r\n                severity: 'success',\r\n                summary: 'Exitoso',\r\n                detail: 'Ordenes eliminadas',\r\n                life: 3000,\r\n              });\r\n            },\r\n            error=>{\r\n              console.log(error);\r\n            }\r\n          )\r\n          \r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  editOrden(orden: Orden) {\r\n    this.orden = { ...orden };\r\n    this.ordenDialog = true;\r\n  }\r\n\r\n  deleteOrden(orden: Orden) {\r\n    this.confirmationService.confirm({\r\n      message: '¿Estas seguro que quieres eliminar esta orden numero ' + orden.numOrden + '?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.ordenesService.eliminarOrden(orden._id).subscribe(\r\n          result=>{\r\n            this.ordenes = this.ordenes.filter((val) => val._id !== orden._id);\r\n            this.orden = {};\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Exitoso',\r\n              detail: 'Orden eliminada',\r\n              life: 3000,\r\n            });\r\n          },\r\n          error=>{\r\n            console.log(error);\r\n          }\r\n        )\r\n      },\r\n    });\r\n  }\r\n\r\n  hideDialog() {\r\n    this.ordenDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\n  saveOrden() {\r\n    this.submitted = true;\r\n\r\n    if (this.orden.numOrden?.trim()) {\r\n      if (this.orden._id) {\r\n        this.ordenes[this.findIndexById(this.orden._id)] = this.orden;\r\n        this.ordenesService.actualizarOrden(this.orden._id, this.orden).subscribe(\r\n          result=>{\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Exitoso',\r\n              detail: 'Orden actualizada',\r\n              life: 3000,\r\n            });\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        )\r\n      } \r\n\r\n      this.ordenes = [...this.ordenes];\r\n      this.ordenDialog = false;\r\n      this.orden = {};\r\n    }\r\n  }\r\n\r\n  findIndexById(id: string): number {\r\n    let index = -1;\r\n    for (let i = 0; i < this.ordenes.length; i++) {\r\n      if (this.ordenes[i]._id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  createId(): string {\r\n    let id = '';\r\n    var chars =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < 5; i++) {\r\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return id;\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title:String = 'admin';\r\n  logged:Boolean = false;\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Motorista } from '../models/motorista';\r\nimport { MotoristasService } from '../services/motoristas.service';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-motoristas',\r\n  templateUrl: './motoristas.component.html',\r\n  styles: [\r\n    `\r\n      :host ::ng-deep .p-dialog .carrier-image {\r\n        width: 150px;\r\n        margin: 0 auto 2rem auto;\r\n        display: block;\r\n      }\r\n    `,\r\n  ],\r\n  styleUrls: ['./motoristas.component.sass']\r\n})\r\nexport class MotoristasComponent {\r\n  motoristaDialog: boolean = false;\r\n  motoristas: Motorista[] = [];\r\n  motorista!: Motorista;\r\n  motoristaSeleccionado: Motorista[] = [];\r\n  submitted: boolean = false;\r\n  option: number=2;\r\n\r\n  faCheckCircle = faCheckCircle;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  constructor(\r\n    private motoristasService: MotoristasService,\r\n    private messageService: MessageService,\r\n    private confirmationService: ConfirmationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.motoristasService.obtenerMotoristas().subscribe(\r\n      result=>{\r\n        this.motoristas = result;\r\n        console.log(result);\r\n      },\r\n      error=> console.log(error)\r\n    )\r\n    document.getElementById('body').style.backgroundColor = '#FFE9C7';\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.motorista.tipoUsuario.motoristaInfo.estadoAdmision = e.checked;\r\n  }\r\n\r\n  deleteSelectedMotorista() {\r\n    this.confirmationService.confirm({\r\n      message: '¿Estas seguro que quieres eliminar estos motoristas?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.motoristas = this.motoristas.filter(\r\n          (val) => !this.motoristaSeleccionado.includes(val)\r\n        );\r\n        for (let i = 0; i < this.motoristaSeleccionado.length; i++) {\r\n          this.motoristasService.eliminarMotorista(this.motoristaSeleccionado[i]._id).subscribe(\r\n            result=>{\r\n              this.messageService.add({\r\n                severity: 'success',\r\n                summary: 'Exitoso',\r\n                detail: 'Motoristas eliminados',\r\n                life: 3000,\r\n              });\r\n            },\r\n            error=>{\r\n              console.log(error);\r\n            }\r\n          )\r\n        }\r\n      },\r\n    });\r\n  }\r\n\r\n  editMotorista(motorista: Motorista) {\r\n    this.motorista = { ...motorista };\r\n    this.motoristaDialog = true;\r\n  }\r\n\r\n  deleteMotorista(motorista: Motorista) {\r\n    this.confirmationService.confirm({\r\n      message: '¿Estas seguro que quieres eliminar este ' + motorista.nombre + '?',\r\n      header: 'Confirmar',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        this.motoristasService.eliminarMotorista(this.motorista._id).subscribe(\r\n          result=>{\r\n            this.motoristas = this.motoristas.filter((val) => val._id !== motorista._id);\r\n            this.motorista = {};\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Exitoso',\r\n              detail: 'Motorista eliminado',\r\n              life: 3000,\r\n            });\r\n          },\r\n          error=>{\r\n            console.log(error);\r\n          }\r\n        )\r\n        \r\n      },\r\n    });\r\n  }\r\n\r\n  hideDialog() {\r\n    this.motoristaDialog = false;\r\n    this.submitted = false;\r\n  }\r\n\r\n  saveMotorista() {\r\n    this.submitted = true;\r\n\r\n    if (this.motorista.nombre?.trim()) {\r\n      if (this.motorista._id) {\r\n        this.motoristas[this.findIndexById(this.motorista._id)] = this.motorista;\r\n        console.log(this.motorista);\r\n        let estado = {estadoAdmision: this.motorista.tipoUsuario.motoristaInfo.estadoAdmision};\r\n    \r\n        this.motoristasService.actualizarMotorista(this.motorista._id, estado).subscribe(\r\n          result=>{\r\n            console.log(result);\r\n            this.messageService.add({\r\n              severity: 'success',\r\n              summary: 'Exitoso',\r\n              detail: 'Estado de motorista actualizado',\r\n              life: 3000,\r\n            });\r\n          },\r\n          error=>{\r\n            console.log(error);\r\n          }\r\n        )\r\n      }\r\n\r\n      this.motoristas = [...this.motoristas];\r\n      this.motoristaDialog = false;\r\n      this.motorista = {};\r\n    }\r\n  }\r\n\r\n  findIndexById(id: string): number {\r\n    let index = -1;\r\n    for (let i = 0; i < this.motoristas.length; i++) {\r\n      if (this.motoristas[i]._id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  createId(): string {\r\n    let id = '';\r\n    var chars =\r\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < 5; i++) {\r\n      id += chars.charAt(Math.floor(Math.random() * chars.length));\r\n    }\r\n    return id;\r\n  }\r\n\r\n}\r\n","<app-navbar [item]='option'></app-navbar>\r\n<div id=\"ad-title\">\r\n    <h2>Gestión de motoristas</h2>\r\n</div>\r\n<div class=\"container-fluid\">\r\n    <p-toast></p-toast>\r\n\r\n    <div class=\"card\">\r\n        <p-toolbar styleClass=\"p-mb-4\">\r\n            <ng-template pTemplate=\"left\">\r\n                <button pButton pRipple [label]=\"Delete\" icon=\"pi pi-trash\" class=\"btn-delete\"\r\n                    (click)=\"deleteSelectedMotorista()\"\r\n                    [disabled]=\"!motoristaSeleccionado || !motoristaSeleccionado.length\"></button>\r\n            </ng-template>\r\n            <span class=\"p-input-icon-left\" id=\"buscar\">\r\n                <i class=\"pi pi-search\"></i>\r\n                <input pInputText type=\"text\" (input)=\"dt.filterGlobal($event.target.value, 'contains')\"\r\n                    placeholder=\"Buscar\" />\r\n            </span>\r\n        </p-toolbar>\r\n\r\n        <p-table #dt [value]=\"motoristas\" [rows]=\"10\" [paginator]=\"true\"\r\n            [globalFilterFields]=\"['name','country.name','representative.name','status']\"\r\n            [(selection)]=\"motoristaSeleccionado\" [rowHover]=\"true\" dataKey=\"_id\"\r\n            currentPageReportTemplate=\"Mostrar de {first} a {last} de {totalRecords} motoristas\"\r\n            [showCurrentPageReport]=\"true\">\r\n            <ng-template pTemplate=\"header\">\r\n                <tr>\r\n                    <th style=\"width: 3rem\">\r\n                        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n                    </th>\r\n                    <th pSortableColumn=\"name\">Nombre</th>\r\n                    <th pSortableColumn=\"lastname\">Apellido</th>\r\n                    <th pSortableColumn=\"city\">Ciudad</th>\r\n                    <th pSortableColumn=\"gender\">Género</th>\r\n                    <th pSortableColumn=\"birthday\">Nacimiento</th>\r\n                    <th pSortableColumn=\"motorcycle\">Motocicleta</th>\r\n                    <th pSortableColumn=\"license\">Licencia</th>\r\n                    <th pSortableColumn=\"internet\">Datos móviles</th>\r\n                    <th pSortableColumn=\"experience\">Experiencia</th>\r\n                    <th pSortableColumn=\"status\">Estado</th>\r\n                    <th></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"body\" let-motorista>\r\n                <tr>\r\n                    <td>\r\n                        <p-tableCheckbox [value]=\"motorista\"></p-tableCheckbox>\r\n                    </td>\r\n                    <td>{{motorista.nombre}}</td>\r\n                    <td>{{motorista.apellido}}</td>\r\n                    <td>{{motorista.ciudad.ciudad}}</td>\r\n                    <td>\r\n                        <label *ngIf=\"motorista.genero\">Masculino</label>\r\n                        <label *ngIf=\"!motorista.genero\">Femenino</label>\r\n                    </td>\r\n                    <td>{{motorista.fechaNacimiento | date:'dd-MM-yyyy'}}</td>\r\n                    <td> \r\n                        <fa-icon [icon]=\"faCheckCircle\" class=\"fa-2x ic-check\" *ngIf=\"motorista.tipoUsuario.motoristaInfo.motocicleta\"></fa-icon>\r\n                        <fa-icon [icon]=\"faTimesCircle\" class=\"fa-2x ic-time\" *ngIf=\"!motorista.tipoUsuario.motoristaInfo.motocicleta\"></fa-icon>\r\n                    </td>\r\n                    <td>\r\n                        <fa-icon [icon]=\"faCheckCircle\" class=\"fa-2x ic-check\" *ngIf=\"motorista.tipoUsuario.motoristaInfo.licencia\"></fa-icon>\r\n                        <fa-icon [icon]=\"faTimesCircle\" class=\"fa-2x ic-time\" *ngIf=\"!motorista.tipoUsuario.motoristaInfo.licencia\"></fa-icon>\r\n                    </td>\r\n                    <td>\r\n                        <fa-icon [icon]=\"faCheckCircle\" class=\"fa-2x ic-check\" *ngIf=\"motorista.tipoUsuario.motoristaInfo.datosMoviles\"></fa-icon>\r\n                        <fa-icon [icon]=\"faTimesCircle\" class=\"fa-2x ic-time\" *ngIf=\"!motorista.tipoUsuario.motoristaInfo.datosMoviles\"></fa-icon>\r\n                    </td>\r\n                    <td>{{motorista.tipoUsuario.motoristaInfo.experiencia.experiencia}}</td>\r\n                    <td>\r\n                        <fa-icon [icon]=\"faCheckCircle\" class=\"fa-2x ic-check\" *ngIf=\"motorista.tipoUsuario.motoristaInfo.estadoAdmision\"></fa-icon>\r\n                        <fa-icon [icon]=\"faTimesCircle\" class=\"fa-2x ic-time\" *ngIf=\"!motorista.tipoUsuario.motoristaInfo.estadoAdmision\"></fa-icon>\r\n                    </td>\r\n                    <td>\r\n                        <button pButton pRipple icon=\"pi pi-pencil\" class=\"p-button-rounded p-button-success p-mr-2\"\r\n                            (click)=\"editMotorista(motorista)\"></button>\r\n                        <button pButton pRipple icon=\"pi pi-trash\" class=\"p-button-rounded p-button-warning\"\r\n                            (click)=\"deleteMotorista(motorista)\"></button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate=\"summary\">\r\n                <div class=\"p-d-flex p-ai-center p-jc-between\">\r\n                    En total hay {{motoristas ? motoristas.length : 0 }} motoristas.\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n\r\n    <!--Modal Create Company-->\r\n\r\n    <p-dialog [(visible)]=\"motoristaDialog\" [style]=\"{width: '450px'}\" header=\"Detalle de Motorista\" [modal]=\"true\"\r\n        styleClass=\"p-fluid\" id=\"admim-modal\">\r\n        <ng-template pTemplate=\"content\">\r\n            <div class=\"p-field\">\r\n                <label for=\"name\">Nombre</label>\r\n                <input type=\"text\" pInputText id=\"name\" [(ngModel)]=\"motorista.nombre\" required disabled />\r\n                <small class=\"p-error\" *ngIf=\"submitted && !motorista.nombre\">Name is required.</small>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"p-mb-3\">Apellido</label>\r\n                <input type=\"text\" pInputText id=\"lastname\" [(ngModel)]=\"motorista.apellido\" required disabled />\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"city\">Ciudad</label>\r\n                <input type=\"text\" pInputText id=\"city\" [(ngModel)]=\"motorista.ciudad.ciudad\" required disabled />\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"gender\">Género</label>\r\n                <input type=\"text\" pInputText id=\"gender\" [(ngModel)]=\"motorista.genero\" required disabled />\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"birthday\">Fecha de nacimiento</label>\r\n                <input type=\"text\" pInputText id=\"birthday\" [(ngModel)]=\"motorista.fechaNacimiento\" required disabled />\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"motorcycle\" class=\"mb-2\">¿Posee motocicleta?</label><br>\r\n                <p-inputSwitch [(ngModel)]=\"motorista.tipoUsuario.motoristaInfo.motocicleta\" class=\"mb-2\" disabled></p-inputSwitch>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label class=\"mb-2\">Licencia vigente</label><br>\r\n                <p-inputSwitch [(ngModel)]=\"motorista.tipoUsuario.motoristaInfo.licencia\" class=\"mb-2\" disabled></p-inputSwitch>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"internet\" class=\"mb-2\">Datos móviles</label><br>\r\n                <p-inputSwitch [(ngModel)]=\"motorista.tipoUsuario.motoristaInfo.datosMoviles\" class=\"mb-2\" disabled></p-inputSwitch>\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"experience\" class=\"mb-2\">Experiencia</label><br>\r\n                <input type=\"text\" pInputText id=\"experiencia\" [(ngModel)]=\"motorista.tipoUsuario.motoristaInfo.experiencia.experiencia\" required disabled />\r\n            </div>\r\n            <div class=\"p-field\">\r\n                <label for=\"status\" class=\"mb-2\">Estado</label><br>\r\n                <p-inputSwitch [(ngModel)]=\"motorista.tipoUsuario.motoristaInfo.estadoAdmision\" (onChange)=\"handleChange($event)\" class=\"mb-2\"></p-inputSwitch>\r\n            </div>\r\n        </ng-template>\r\n\r\n        <ng-template pTemplate=\"footer\">\r\n            <button pButton pRipple label=\"Cancelar\" icon=\"pi pi-times\" class=\"p-button-text\" id=\"btn-mmodal1\"\r\n                (click)=\"hideDialog()\"></button>\r\n            <button pButton pRipple label=\"Guardar\" icon=\"pi pi-check\" class=\"p-button-text\" id=\"btn-mmodal2\"\r\n                (click)=\"saveMotorista()\"></button>\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <p-confirmDialog [style]=\"{width: '450px'}\"></p-confirmDialog>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { TableModule } from 'primeng/table';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { SliderModule } from 'primeng/slider';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { ContextMenuModule } from 'primeng/contextmenu';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { ToolbarModule } from 'primeng/toolbar';\r\nimport { RatingModule } from 'primeng/rating';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { MessageService } from 'primeng/api';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MenubarModule } from 'primeng/menubar';\r\n\r\nimport { ProductosComponent } from './productos/productos.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { EmpresasComponent } from './empresas/empresas.component';\r\nimport { MotoristasComponent } from './motoristas/motoristas.component';\r\nimport { OrdenesComponent } from './ordenes/ordenes.component';\r\nimport { CategoriasComponent } from './categorias/categorias.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ProductosComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    EmpresasComponent,\r\n    MotoristasComponent,\r\n    OrdenesComponent,\r\n    CategoriasComponent\r\n   ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    ToastModule,\r\n    MessageModule,\r\n    TabMenuModule,\r\n    TableModule,\r\n    CalendarModule,\r\n    SliderModule,\r\n    DialogModule,\r\n    MultiSelectModule,\r\n    ContextMenuModule,\r\n    DropdownModule,\r\n    ButtonModule,\r\n    InputTextModule,\r\n    MenubarModule,\r\n    ProgressBarModule,\r\n    HttpClientModule,\r\n    FileUploadModule,\r\n    ToolbarModule,\r\n    InputSwitchModule,\r\n    FontAwesomeModule,\r\n    RatingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RadioButtonModule,\r\n    InputNumberModule,\r\n    ConfirmDialogModule,\r\n    InputTextareaModule,\r\n    RouterModule.forRoot([{ path: '', component: AppComponent }]),\r\n  ],\r\n  providers: [\r\n    MessageService,\r\n    ConfirmationService,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","export const API_BASE_URL = 'https://nany-rest-api.herokuapp.com';  /* 'http://localhost:8888'*/;","import { API_BASE_URL } from '../app.config';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  subirImagen(imagen): Observable<any> {\n    return this.httpClient.post(`${API_BASE_URL}/upload`, imagen);\n  }\n}","<div id=\"menu-admin\">\r\n  <!--<p-tabMenu [model]=\"items\" [activeItem]=\"activeItem\"></p-tabMenu>-->\r\n  <p-menubar [model]=\"items\">\r\n    <ng-template pTemplate=\"start\">\r\n      <img src=\"../assets/img/Logo-Nany.png\" alt=\"logo\"  routerLink=\"/Categorias\">\r\n    </ng-template>\r\n  </p-menubar>\r\n</div>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MenuItem, MessageService } from 'primeng/api';\r\nimport { Router } from '@angular/router'\r\nimport { ConfirmationService } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  items: MenuItem[];\r\n  activeItem: MenuItem;\r\n  @Input() item: number;\r\n\r\n  constructor(\r\n    private _route: Router,\r\n    private confirmationService: ConfirmationService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.items = [\r\n      {\r\n        label: 'Empresas',\r\n        icon: 'pi pi-fw pi-briefcase',\r\n        routerLink: ['/Empresas'],\r\n      },\r\n      {\r\n        label: 'Productos',\r\n        icon: 'pi pi-fw pi-shopping-cart',\r\n        routerLink: ['/Productos'],\r\n      },\r\n      {\r\n        label: 'Motoristas',\r\n        icon: 'pi pi-fw pi-key',\r\n        routerLink: ['/Motoristas'],\r\n      },\r\n      {\r\n        label: 'Órdenes',\r\n        icon: 'pi pi-fw pi-calendar',\r\n        routerLink: ['/Ordenes'],\r\n      },\r\n      { label: 'Nombre Usuario', icon: 'pi pi-fw pi-user' },\r\n      {\r\n        icon: 'pi pi-power-off',\r\n        command: (event) => {\r\n          console.log('Cerrar Sesion');\r\n          this.confirmationService.confirm({\r\n            message: '¿Estas seguro que deseas cerrar la sesión?',\r\n            header: 'Confirmar',\r\n            icon: 'pi pi-exclamation-triangle',\r\n            accept: () => {\r\n              this._route.navigate(['/']);\r\n            },\r\n          });\r\n        },\r\n      },\r\n    ];\r\n    this.activeItem = this.items[this.item];\r\n  }\r\n}\r\n","import { API_BASE_URL } from '../app.config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrdenesService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  obtenerOrdenes():Observable<any>{\r\n    return this.httpClient.get(`${API_BASE_URL}/ordenes`);\r\n  }\r\n\r\n  obtenerOrden(idOrden: String):Observable<any>{\r\n    return this.httpClient.get(`${API_BASE_URL}/ordenes/${idOrden}`);\r\n  }\r\n\r\n  crearOrden(orden: any):Observable<any>{\r\n    return this.httpClient.post(`${API_BASE_URL}/ordenes`, orden);\r\n  }\r\n\r\n  actualizarOrden(idOrden: String, motorista: any):Observable<any>{\r\n    return this.httpClient.put(`${API_BASE_URL}/ordenes/${idOrden}`, motorista);\r\n  }\r\n\r\n  eliminarOrden(idOrden: String):Observable<any>{\r\n    return this.httpClient.delete(`${API_BASE_URL}/ordenes/${idOrden}`);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmpresasComponent } from './empresas/empresas.component';\r\nimport { OrdenesComponent } from './ordenes/ordenes.component';\r\nimport { MotoristasComponent } from './motoristas/motoristas.component';\r\nimport { ProductosComponent } from './productos/productos.component';\r\nimport { CategoriasComponent } from './categorias/categorias.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: LoginComponent},\r\n  {path: 'Categorias', component: CategoriasComponent},\r\n  {path: 'Empresas', component: EmpresasComponent},\r\n  {path: 'Ordenes', component: OrdenesComponent},\r\n  {path: 'Motoristas', component: MotoristasComponent},\r\n  {path: 'Productos', component: ProductosComponent},\r\n  {path: '**', pathMatch: 'full', redirectTo: ''},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  formLogin = new FormGroup({\r\n    email: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(\r\n        /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n      ),\r\n    ]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n  });\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    document.getElementById('body').style.backgroundColor = '#FFE9C7';\r\n  }\r\n\r\n  get email() {\r\n    return this.formLogin.get('email');\r\n  }\r\n\r\n  get password() {\r\n    return this.formLogin.get('password');\r\n  }\r\n}\r\n","<div class=\"container\" id=\"login-container\">\r\n    <div class=\"row\">\r\n        <img class=\"img-login\" src=\"../../../assets/img/Logo-Nany-trans-1.png\" alt=\"Nany\">\r\n        <h4>Inicio de sesión para administración</h4>\r\n        <form class=\"needs-validation\" novalidate [formGroup]=\"formLogin\">\r\n            <div class=\"content-login\">\r\n                <div>\r\n                    <h5>Correo Electrónico</h5>\r\n                    <input class=\"form-control\" type=\"email\" placeholder=\"ejemplo@gmail.com\" formControlName=\"email\"\r\n                    [ngClass]=\"{'is-invalid': email.invalid && (email.dirty || email.touched), 'is-valid': email.valid}\" required>\r\n                    <div class=\"invalid-feedback login-feedback\" *ngIf=\"email.errors\">\r\n                        <span *ngIf=\"email.errors.pattern && email.errors.pattern != null\">Correo Inválido</span>\r\n                        <span *ngIf=\"email.errors.required\">Este campo no puede quedar vacío</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"mt-5\">\r\n                    <h5>Contraseña</h5>\r\n                    <input type=\"password\" class=\"form-control\" name=\"password\" autocomplete=\"on\"\r\n                    [ngClass]=\"{'is-invalid': password.invalid && (password.dirty || password.touched), 'is-valid': password.valid}\"\r\n                    formControlName=\"password\" required>\r\n                    <div class=\"invalid-feedback login-feedback\" *ngIf=\"password.errors\">\r\n                        <span *ngIf=\"password.errors.required\">Este campo no puede quedar vacío</span>\r\n                        <span *ngIf=\"password.errors.minlength\">Mínimo 8 caracteres</span>\r\n                    </div>\r\n                </div>\r\n              <button type=\"button\" routerLink=\"/Categorias\" class=\"btn btn-login mt-5\"> Iniciar Sesión</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { API_BASE_URL } from '../app.config';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EmpresasService {\n  constructor(private httpClient: HttpClient) {}\n\n  // Obtener categorias\n  obtenerCategorias(): Observable<any> {\n    return this.httpClient.get(`${API_BASE_URL}/categorias`);\n  }\n  \n  // CRUD Empresas\n  crearEmpresa(idCategoria: String, empresa: any): Observable<any> {\n    return this.httpClient.post(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas`,\n      empresa\n    );\n  }\n\n  obtenerEmpresas(idCategoria: String): Observable<any> {\n    return this.httpClient.get(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas`\n    );\n  }\n\n  obtenerEmpresa(idCategoria: String, idEmpresa: String): Observable<any> {\n    return this.httpClient.get(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas/${idEmpresa}`\n    );\n  }\n\n  actualizarEmpresa(\n    idCategoria: String,\n    idEmpresa: String,\n    empresa: any\n  ): Observable<any> {\n    return this.httpClient.put(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas/${idEmpresa}`,\n      empresa\n    );\n  }\n\n  borrarEmpresa(idCategoria: String, idEmpresa: String): Observable<any> {\n    return this.httpClient.delete(\n      `${API_BASE_URL}/categorias/${idCategoria}/empresas/${idEmpresa}`\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}